user                            www;
worker_processes                auto;
error_log                       /var/log/nginx/error.log warn;

events {
    worker_connections          1024;
}

stream {
    upstream mysqlapp {
        server an-mysql:3306;
    }
    upstream mongoapp {
        server an-mongo:27017;
    }

    server {
        listen 3306;
        proxy_pass mysqlapp;
    }
    server {
        listen 27017;
        proxy_pass mongoapp;
    }
}

http {
    default_type                application/octet-stream;
    include                     /etc/nginx/mime.types; 
    server_tokens               off;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    ssl_ciphers                 EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;
    ssl_prefer_server_ciphers   on;

    upstream apiapp {
        server an-api:3000;
    }
    upstream redisapp {
        server an-redis:6379;
    }
    upstream oauthapp {
        server an-oauth:5000;
    }
    upstream cdnapp {
        server an-cdn:2000;
    }

    ###
    # Setup without https.
    ### 

    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name             antodo.local;

    #     root                    /www;
    #     index                   index.html index.htm;
    #     sendfile                on;
    #     error_page              500 502 503 504  /50x.html;

    #     gzip_static             on;
    #     gzip                    off;
    #     # gzip_comp_level         3;
    #     # gzip_types              text/plain text/css application/javascript image/*;

    #     add_header              X-Content-Type-Options nosniff;
    #     add_header              X-Frame-Options SAMEORIGIN;
    #     add_header              X-XSS-Protection "1; mode=block";
        
    #     location / {
    #         rewrite ^/(/.*) $1 break;
    #         try_files $uri $uri/ /index.html =404; 
    #         # try_files $uri $uri/ =404; # ## ### Si quiero que en vez del index.html muestre el 404.
    #     }

    #     location = /50x.html {
    #         root                /usr/share/nginx/html;
    #     }
    # }

    ###
    # Setup with https.
    ###

    server {
        listen 80;
        listen [::]:80;
       
        if ($host = 'antodo.local') {
            return 301 https://antodo.local$request_uri;
        }

        if ($host = 'api.antodo.local') {
            return 301 https://api.antodo.local$request_uri;
        }

        if ($host = 'oauth.antodo.local') {
            return 301 https://oauth.antodo.local$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        if ($host = 'https://api.antodo.local') {
            return 301 https://api.antodo.local:3000$request_uri;
        }

        if ($host = 'https://oauth.antodo.local') {
            return 301 https://oauth.antodo.local:5000$request_uri;
        }

        server_name             antodo.local;

        ssl_certificate         /etc/nginx/antodo.crt;
        ssl_certificate_key     /etc/nginx/antodo.key.pem; 

        root                    /www;
        index                   index.html index.htm;
        sendfile                on;
        error_page              500 502 503 504  /50x.html;

        gzip_static             on;
        gzip                    off;
        # gzip_comp_level         3;
        # gzip_types              text/plain text/css application/javascript image/*;

        add_header              X-Content-Type-Options nosniff;
        add_header              X-Frame-Options SAMEORIGIN;
        add_header              X-XSS-Protection "1; mode=block";
        
        location / {
            rewrite ^/(/.*) $1 break;
            try_files $uri $uri/ /index.html =404; 
            # try_files $uri $uri/ =404; # ## ### Si quiero que en vez del index.html muestre el 404.
        }

        location = /50x.html {
            root                /usr/share/nginx/html;
        }
    }

    server {
        listen 3000 ssl;
        listen [::]:3000 ssl;
        server_name api.antodo.local;

        ssl_certificate         /etc/nginx/antodo.crt;
        ssl_certificate_key     /etc/nginx/antodo.key.pem;

        # resolver 127.0.0.11;
        sendfile off;
        proxy_buffering off;

        location /api/v1/user/ {
            resolver 127.0.0.11 valid=5s;
            set $api http://apiapp/api/v1/user/;

            proxy_pass $api;
            include /etc/nginx/proxy.conf;
        }

        location /api/v1/ {
            resolver 127.0.0.11 valid=5s;
            set $api http://apiapp/api/v1/$is_args$args;

            proxy_pass $api;
            include /etc/nginx/proxy.conf;
        }
    }

    server {
        listen 5000 ssl;
        listen [::]:5000 ssl;
        server_name oauth.antodo.local;

        ssl_certificate         /etc/nginx/antodo.crt;
        ssl_certificate_key     /etc/nginx/antodo.key.pem;

        # resolver 127.0.0.11;
        sendfile off;
        proxy_buffering off;

        location /oauth/v1/ {
            resolver 127.0.0.11 valid=5s;
            set $oauth http://oauthapp/oauth/v1/$is_args$args;

            proxy_pass $oauth;
            include /etc/nginx/proxy.conf;
        }
    }

    server {
        listen 6379;
        listen [::]:6379;
        server_name antodo.local;
        # resolver 127.0.0.11;
        location /cache {
            resolver 127.0.0.11 valid=5s;
            set $redis http://redisapp/;
            rewrite ^/cache(/.*) $1 break;

            proxy_pass $redis;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;

            add_header 'Access-Control-Allow-Origin' 'https://antodo.local';
		    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        }  
    }

    server {
        listen 2000;
        listen [::]:2000;
        server_name cdn.antodo.local;
        # resolver 127.0.0.11;
        location ^~/static/v1/ {
            resolver 127.0.0.11 valid=5s;
            set $cdn http://cdnapp;
            rewrite ^/static/v1(/.*) $1 break;

            proxy_pass $cdn;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;

            add_header 'Access-Control-Allow-Origin' 'https://antodo.local';
		    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        }
    }
}
